version: "3.9"

services:
  postgres:
    user: "999:999"
    image: postgres:latest
    container_name: chatbot-postgres
    command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      POSTGRES_PASSWORD: mysecretpassword
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    networks:
      - chatbot_network
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin-chatbot
    ports:
      - "127.0.0.1:8081:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: 10
    networks:
      - chatbot_network
  chatbot-auth:
    image: chatbot-auth:latest
    pull_policy: if_not_present
    container_name: chatbot-auth
    ports:
      - "5000:5000"
    environment:
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
    depends_on:
      - postgres
    networks:
      - chatbot_network
  chatbot-nginx:
    user: "101:101"
    image: chatbot-nginx:latest
    pull_policy: if_not_present
    container_name: chatbot-nginx
    ports:
      - "8888:8888"
      - "8889:8889"
    environment:
      NGINX_SERVER: ${NGINX_SERVER_URL}
      RASA_SERVER: ${RASA_SERVER_URL}
      AUTH_SERVER: ${AUTH_SERVER_URL}
    depends_on:
      - chatbot-auth
      - rasa-server
    networks:
      - chatbot_network
  rasa-actions:
    image: chatbot-rasa
    pull_policy: if_not_present
    container_name: rasa-actions
#    command: "start --actions actions --cors '*' --debug"
    ports:
      - "5055:5055"
    environment:
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      ROLE: 'action'
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      PYTHONUNBUFFERED: 1
    networks:
      - chatbot_network
    volumes:
      - ./chatbot-rasa/actions:/app/actions
  rasa-server:
    image: chatbot-rasa
    pull_policy: if_not_present
    container_name: rasa-server
    environment:
      ROLE: 'rasa'
      RASA_CORS: ${RASA_CORS}
    depends_on:
      - rasa-actions
    ports:
      - "5005:5005"
    networks:
      - chatbot_network
    volumes:
      - ./chatbot-rasa:/app
  rag-service:
    image: rag-server
    # build:
    #   context: ./rag-service
    container_name: rag-service
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    ports:
      - "8000:8000"
    networks:
      - chatbot_network
    volumes:
      - ./rag-server/pdfs:/app/pdfs
networks:
  chatbot_network:
    driver: bridge
